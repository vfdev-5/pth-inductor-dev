buf2: SchedulerNode(ComputedBuffer)
buf2.writes = [MemoryDep('buf2', c0, {c0: 1360})]
buf2.unmet_dependencies = []
buf2.met_dependencies = []
buf2.users = [NodeUser(node=SchedulerNode(name='buf3'), can_inplace=False, is_weak=False)]
buf2.group.device = cpu
buf2.group.iteration = ((272, 5), ())
buf2.sizes = ([272, 5], [])
class buf2_loop_body:
    var_ranges = {z0: 272, z1: 5}
    index0 = z0
    index1 = z1
    index2 = 5*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        index_expr = ops.index_expr(get_index, torch.int64)
        to_dtype = ops.to_dtype(index_expr, torch.float32, src_dtype = torch.int64)
        constant = ops.constant(0.5, torch.float32)
        add = ops.add(to_dtype, constant)
        constant_1 = ops.constant(1.6764705882352942, torch.float32)
        mul = ops.mul(add, constant_1)
        constant_2 = ops.constant(1.6764705882352942, torch.float32)
        add_1 = ops.add(mul, constant_2)
        constant_3 = ops.constant(0.5, torch.float32)
        add_2 = ops.add(add_1, constant_3)
        to_dtype_1 = ops.to_dtype(add_2, torch.int64, src_dtype = torch.float32)
        constant_4 = ops.constant(456, torch.int64)
        minimum = ops.minimum(to_dtype_1, constant_4)
        get_index_1 = self.get_index('index0')
        index_expr_1 = ops.index_expr(get_index_1, torch.int64)
        to_dtype_2 = ops.to_dtype(index_expr_1, torch.float32, src_dtype = torch.int64)
        constant_5 = ops.constant(0.5, torch.float32)
        add_3 = ops.add(to_dtype_2, constant_5)
        constant_6 = ops.constant(1.6764705882352942, torch.float32)
        mul_1 = ops.mul(add_3, constant_6)
        constant_7 = ops.constant(1.6764705882352942, torch.float32)
        sub = ops.sub(mul_1, constant_7)
        constant_8 = ops.constant(0.5, torch.float32)
        add_4 = ops.add(sub, constant_8)
        to_dtype_3 = ops.to_dtype(add_4, torch.int64, src_dtype = torch.float32)
        constant_9 = ops.constant(0, torch.int64)
        maximum = ops.maximum(to_dtype_3, constant_9)
        sub_1 = ops.sub(minimum, maximum)
        constant_10 = ops.constant(5, torch.int64)
        minimum_1 = ops.minimum(sub_1, constant_10)
        get_index_2 = self.get_index('index1')
        index_expr_2 = ops.index_expr(get_index_2, torch.int64)
        lt = ops.lt(index_expr_2, minimum_1)
        get_index_3 = self.get_index('index0')
        index_expr_3 = ops.index_expr(get_index_3, torch.int64)
        to_dtype_4 = ops.to_dtype(index_expr_3, torch.float32, src_dtype = torch.int64)
        constant_11 = ops.constant(0.5, torch.float32)
        add_5 = ops.add(to_dtype_4, constant_11)
        constant_12 = ops.constant(1.6764705882352942, torch.float32)
        mul_2 = ops.mul(add_5, constant_12)
        constant_13 = ops.constant(1.6764705882352942, torch.float32)
        sub_2 = ops.sub(mul_2, constant_13)
        constant_14 = ops.constant(0.5, torch.float32)
        add_6 = ops.add(sub_2, constant_14)
        to_dtype_5 = ops.to_dtype(add_6, torch.int64, src_dtype = torch.float32)
        constant_15 = ops.constant(0, torch.int64)
        maximum_1 = ops.maximum(to_dtype_5, constant_15)
        get_index_4 = self.get_index('index1')
        index_expr_4 = ops.index_expr(get_index_4, torch.int64)
        add_7 = ops.add(index_expr_4, maximum_1)
        to_dtype_6 = ops.to_dtype(add_7, torch.float32, src_dtype = torch.int64)
        get_index_5 = self.get_index('index0')
        index_expr_5 = ops.index_expr(get_index_5, torch.int64)
        to_dtype_7 = ops.to_dtype(index_expr_5, torch.float32, src_dtype = torch.int64)
        constant_16 = ops.constant(0.5, torch.float32)
        add_8 = ops.add(to_dtype_7, constant_16)
        constant_17 = ops.constant(1.6764705882352942, torch.float32)
        mul_3 = ops.mul(add_8, constant_17)
        sub_3 = ops.sub(to_dtype_6, mul_3)
        constant_18 = ops.constant(0.5, torch.float32)
        add_9 = ops.add(sub_3, constant_18)
        constant_19 = ops.constant(0.5964912280701754, torch.float32)
        mul_4 = ops.mul(add_9, constant_19)
        abs_1 = ops.abs(mul_4)
        constant_20 = ops.constant(1.0, torch.float32)
        minimum_2 = ops.minimum(abs_1, constant_20)
        constant_21 = ops.constant(1.0, torch.float32)
        sub_4 = ops.sub(constant_21, minimum_2)
        constant_22 = ops.constant(0.0, torch.float32)
        where = ops.where(lt, sub_4, constant_22)
        get_index_6 = self.get_index('index0')
        index_expr_6 = ops.index_expr(get_index_6, torch.int64)
        to_dtype_8 = ops.to_dtype(index_expr_6, torch.float32, src_dtype = torch.int64)
        constant_23 = ops.constant(0.5, torch.float32)
        add_10 = ops.add(to_dtype_8, constant_23)
        constant_24 = ops.constant(1.6764705882352942, torch.float32)
        mul_5 = ops.mul(add_10, constant_24)
        constant_25 = ops.constant(1.6764705882352942, torch.float32)
        add_11 = ops.add(mul_5, constant_25)
        constant_26 = ops.constant(0.5, torch.float32)
        add_12 = ops.add(add_11, constant_26)
        to_dtype_9 = ops.to_dtype(add_12, torch.int64, src_dtype = torch.float32)
        constant_27 = ops.constant(456, torch.int64)
        minimum_3 = ops.minimum(to_dtype_9, constant_27)
        get_index_7 = self.get_index('index0')
        index_expr_7 = ops.index_expr(get_index_7, torch.int64)
        to_dtype_10 = ops.to_dtype(index_expr_7, torch.float32, src_dtype = torch.int64)
        constant_28 = ops.constant(0.5, torch.float32)
        add_13 = ops.add(to_dtype_10, constant_28)
        constant_29 = ops.constant(1.6764705882352942, torch.float32)
        mul_6 = ops.mul(add_13, constant_29)
        constant_30 = ops.constant(1.6764705882352942, torch.float32)
        sub_5 = ops.sub(mul_6, constant_30)
        constant_31 = ops.constant(0.5, torch.float32)
        add_14 = ops.add(sub_5, constant_31)
        to_dtype_11 = ops.to_dtype(add_14, torch.int64, src_dtype = torch.float32)
        constant_32 = ops.constant(0, torch.int64)
        maximum_2 = ops.maximum(to_dtype_11, constant_32)
        sub_6 = ops.sub(minimum_3, maximum_2)
        constant_33 = ops.constant(5, torch.int64)
        minimum_4 = ops.minimum(sub_6, constant_33)
        constant_34 = ops.constant(0, torch.int64)
        lt_1 = ops.lt(constant_34, minimum_4)
        get_index_8 = self.get_index('index0')
        index_expr_8 = ops.index_expr(get_index_8, torch.int64)
        to_dtype_12 = ops.to_dtype(index_expr_8, torch.float32, src_dtype = torch.int64)
        constant_35 = ops.constant(0.5, torch.float32)
        add_15 = ops.add(to_dtype_12, constant_35)
        constant_36 = ops.constant(1.6764705882352942, torch.float32)
        mul_7 = ops.mul(add_15, constant_36)
        constant_37 = ops.constant(1.6764705882352942, torch.float32)
        sub_7 = ops.sub(mul_7, constant_37)
        constant_38 = ops.constant(0.5, torch.float32)
        add_16 = ops.add(sub_7, constant_38)
        to_dtype_13 = ops.to_dtype(add_16, torch.int64, src_dtype = torch.float32)
        constant_39 = ops.constant(0, torch.int64)
        maximum_3 = ops.maximum(to_dtype_13, constant_39)
        constant_40 = ops.constant(0, torch.int64)
        add_17 = ops.add(constant_40, maximum_3)
        to_dtype_14 = ops.to_dtype(add_17, torch.float32, src_dtype = torch.int64)
        get_index_9 = self.get_index('index0')
        index_expr_9 = ops.index_expr(get_index_9, torch.int64)
        to_dtype_15 = ops.to_dtype(index_expr_9, torch.float32, src_dtype = torch.int64)
        constant_41 = ops.constant(0.5, torch.float32)
        add_18 = ops.add(to_dtype_15, constant_41)
        constant_42 = ops.constant(1.6764705882352942, torch.float32)
        mul_8 = ops.mul(add_18, constant_42)
        sub_8 = ops.sub(to_dtype_14, mul_8)
        constant_43 = ops.constant(0.5, torch.float32)
        add_19 = ops.add(sub_8, constant_43)
        constant_44 = ops.constant(0.5964912280701754, torch.float32)
        mul_9 = ops.mul(add_19, constant_44)
        abs_2 = ops.abs(mul_9)
        constant_45 = ops.constant(1.0, torch.float32)
        minimum_5 = ops.minimum(abs_2, constant_45)
        constant_46 = ops.constant(1.0, torch.float32)
        sub_9 = ops.sub(constant_46, minimum_5)
        constant_47 = ops.constant(0.0, torch.float32)
        where_1 = ops.where(lt_1, sub_9, constant_47)
        get_index_10 = self.get_index('index0')
        index_expr_10 = ops.index_expr(get_index_10, torch.int64)
        to_dtype_16 = ops.to_dtype(index_expr_10, torch.float32, src_dtype = torch.int64)
        constant_48 = ops.constant(0.5, torch.float32)
        add_20 = ops.add(to_dtype_16, constant_48)
        constant_49 = ops.constant(1.6764705882352942, torch.float32)
        mul_10 = ops.mul(add_20, constant_49)
        constant_50 = ops.constant(1.6764705882352942, torch.float32)
        add_21 = ops.add(mul_10, constant_50)
        constant_51 = ops.constant(0.5, torch.float32)
        add_22 = ops.add(add_21, constant_51)
        to_dtype_17 = ops.to_dtype(add_22, torch.int64, src_dtype = torch.float32)
        constant_52 = ops.constant(456, torch.int64)
        minimum_6 = ops.minimum(to_dtype_17, constant_52)
        get_index_11 = self.get_index('index0')
        index_expr_11 = ops.index_expr(get_index_11, torch.int64)
        to_dtype_18 = ops.to_dtype(index_expr_11, torch.float32, src_dtype = torch.int64)
        constant_53 = ops.constant(0.5, torch.float32)
        add_23 = ops.add(to_dtype_18, constant_53)
        constant_54 = ops.constant(1.6764705882352942, torch.float32)
        mul_11 = ops.mul(add_23, constant_54)
        constant_55 = ops.constant(1.6764705882352942, torch.float32)
        sub_10 = ops.sub(mul_11, constant_55)
        constant_56 = ops.constant(0.5, torch.float32)
        add_24 = ops.add(sub_10, constant_56)
        to_dtype_19 = ops.to_dtype(add_24, torch.int64, src_dtype = torch.float32)
        constant_57 = ops.constant(0, torch.int64)
        maximum_4 = ops.maximum(to_dtype_19, constant_57)
        sub_11 = ops.sub(minimum_6, maximum_4)
        constant_58 = ops.constant(5, torch.int64)
        minimum_7 = ops.minimum(sub_11, constant_58)
        constant_59 = ops.constant(1, torch.int64)
        lt_2 = ops.lt(constant_59, minimum_7)
        get_index_12 = self.get_index('index0')
        index_expr_12 = ops.index_expr(get_index_12, torch.int64)
        to_dtype_20 = ops.to_dtype(index_expr_12, torch.float32, src_dtype = torch.int64)
        constant_60 = ops.constant(0.5, torch.float32)
        add_25 = ops.add(to_dtype_20, constant_60)
        constant_61 = ops.constant(1.6764705882352942, torch.float32)
        mul_12 = ops.mul(add_25, constant_61)
        constant_62 = ops.constant(1.6764705882352942, torch.float32)
        sub_12 = ops.sub(mul_12, constant_62)
        constant_63 = ops.constant(0.5, torch.float32)
        add_26 = ops.add(sub_12, constant_63)
        to_dtype_21 = ops.to_dtype(add_26, torch.int64, src_dtype = torch.float32)
        constant_64 = ops.constant(0, torch.int64)
        maximum_5 = ops.maximum(to_dtype_21, constant_64)
        constant_65 = ops.constant(1, torch.int64)
        add_27 = ops.add(constant_65, maximum_5)
        to_dtype_22 = ops.to_dtype(add_27, torch.float32, src_dtype = torch.int64)
        get_index_13 = self.get_index('index0')
        index_expr_13 = ops.index_expr(get_index_13, torch.int64)
        to_dtype_23 = ops.to_dtype(index_expr_13, torch.float32, src_dtype = torch.int64)
        constant_66 = ops.constant(0.5, torch.float32)
        add_28 = ops.add(to_dtype_23, constant_66)
        constant_67 = ops.constant(1.6764705882352942, torch.float32)
        mul_13 = ops.mul(add_28, constant_67)
        sub_13 = ops.sub(to_dtype_22, mul_13)
        constant_68 = ops.constant(0.5, torch.float32)
        add_29 = ops.add(sub_13, constant_68)
        constant_69 = ops.constant(0.5964912280701754, torch.float32)
        mul_14 = ops.mul(add_29, constant_69)
        abs_3 = ops.abs(mul_14)
        constant_70 = ops.constant(1.0, torch.float32)
        minimum_8 = ops.minimum(abs_3, constant_70)
        constant_71 = ops.constant(1.0, torch.float32)
        sub_14 = ops.sub(constant_71, minimum_8)
        constant_72 = ops.constant(0.0, torch.float32)
        where_2 = ops.where(lt_2, sub_14, constant_72)
        add_30 = ops.add(where_1, where_2)
        get_index_14 = self.get_index('index0')
        index_expr_14 = ops.index_expr(get_index_14, torch.int64)
        to_dtype_24 = ops.to_dtype(index_expr_14, torch.float32, src_dtype = torch.int64)
        constant_73 = ops.constant(0.5, torch.float32)
        add_31 = ops.add(to_dtype_24, constant_73)
        constant_74 = ops.constant(1.6764705882352942, torch.float32)
        mul_15 = ops.mul(add_31, constant_74)
        constant_75 = ops.constant(1.6764705882352942, torch.float32)
        add_32 = ops.add(mul_15, constant_75)
        constant_76 = ops.constant(0.5, torch.float32)
        add_33 = ops.add(add_32, constant_76)
        to_dtype_25 = ops.to_dtype(add_33, torch.int64, src_dtype = torch.float32)
        constant_77 = ops.constant(456, torch.int64)
        minimum_9 = ops.minimum(to_dtype_25, constant_77)
        get_index_15 = self.get_index('index0')
        index_expr_15 = ops.index_expr(get_index_15, torch.int64)
        to_dtype_26 = ops.to_dtype(index_expr_15, torch.float32, src_dtype = torch.int64)
        constant_78 = ops.constant(0.5, torch.float32)
        add_34 = ops.add(to_dtype_26, constant_78)
        constant_79 = ops.constant(1.6764705882352942, torch.float32)
        mul_16 = ops.mul(add_34, constant_79)
        constant_80 = ops.constant(1.6764705882352942, torch.float32)
        sub_15 = ops.sub(mul_16, constant_80)
        constant_81 = ops.constant(0.5, torch.float32)
        add_35 = ops.add(sub_15, constant_81)
        to_dtype_27 = ops.to_dtype(add_35, torch.int64, src_dtype = torch.float32)
        constant_82 = ops.constant(0, torch.int64)
        maximum_6 = ops.maximum(to_dtype_27, constant_82)
        sub_16 = ops.sub(minimum_9, maximum_6)
        constant_83 = ops.constant(5, torch.int64)
        minimum_10 = ops.minimum(sub_16, constant_83)
        constant_84 = ops.constant(2, torch.int64)
        lt_3 = ops.lt(constant_84, minimum_10)
        get_index_16 = self.get_index('index0')
        index_expr_16 = ops.index_expr(get_index_16, torch.int64)
        to_dtype_28 = ops.to_dtype(index_expr_16, torch.float32, src_dtype = torch.int64)
        constant_85 = ops.constant(0.5, torch.float32)
        add_36 = ops.add(to_dtype_28, constant_85)
        constant_86 = ops.constant(1.6764705882352942, torch.float32)
        mul_17 = ops.mul(add_36, constant_86)
        constant_87 = ops.constant(1.6764705882352942, torch.float32)
        sub_17 = ops.sub(mul_17, constant_87)
        constant_88 = ops.constant(0.5, torch.float32)
        add_37 = ops.add(sub_17, constant_88)
        to_dtype_29 = ops.to_dtype(add_37, torch.int64, src_dtype = torch.float32)
        constant_89 = ops.constant(0, torch.int64)
        maximum_7 = ops.maximum(to_dtype_29, constant_89)
        constant_90 = ops.constant(2, torch.int64)
        add_38 = ops.add(constant_90, maximum_7)
        to_dtype_30 = ops.to_dtype(add_38, torch.float32, src_dtype = torch.int64)
        get_index_17 = self.get_index('index0')
        index_expr_17 = ops.index_expr(get_index_17, torch.int64)
        to_dtype_31 = ops.to_dtype(index_expr_17, torch.float32, src_dtype = torch.int64)
        constant_91 = ops.constant(0.5, torch.float32)
        add_39 = ops.add(to_dtype_31, constant_91)
        constant_92 = ops.constant(1.6764705882352942, torch.float32)
        mul_18 = ops.mul(add_39, constant_92)
        sub_18 = ops.sub(to_dtype_30, mul_18)
        constant_93 = ops.constant(0.5, torch.float32)
        add_40 = ops.add(sub_18, constant_93)
        constant_94 = ops.constant(0.5964912280701754, torch.float32)
        mul_19 = ops.mul(add_40, constant_94)
        abs_4 = ops.abs(mul_19)
        constant_95 = ops.constant(1.0, torch.float32)
        minimum_11 = ops.minimum(abs_4, constant_95)
        constant_96 = ops.constant(1.0, torch.float32)
        sub_19 = ops.sub(constant_96, minimum_11)
        constant_97 = ops.constant(0.0, torch.float32)
        where_3 = ops.where(lt_3, sub_19, constant_97)
        add_41 = ops.add(add_30, where_3)
        get_index_18 = self.get_index('index0')
        index_expr_18 = ops.index_expr(get_index_18, torch.int64)
        to_dtype_32 = ops.to_dtype(index_expr_18, torch.float32, src_dtype = torch.int64)
        constant_98 = ops.constant(0.5, torch.float32)
        add_42 = ops.add(to_dtype_32, constant_98)
        constant_99 = ops.constant(1.6764705882352942, torch.float32)
        mul_20 = ops.mul(add_42, constant_99)
        constant_100 = ops.constant(1.6764705882352942, torch.float32)
        add_43 = ops.add(mul_20, constant_100)
        constant_101 = ops.constant(0.5, torch.float32)
        add_44 = ops.add(add_43, constant_101)
        to_dtype_33 = ops.to_dtype(add_44, torch.int64, src_dtype = torch.float32)
        constant_102 = ops.constant(456, torch.int64)
        minimum_12 = ops.minimum(to_dtype_33, constant_102)
        get_index_19 = self.get_index('index0')
        index_expr_19 = ops.index_expr(get_index_19, torch.int64)
        to_dtype_34 = ops.to_dtype(index_expr_19, torch.float32, src_dtype = torch.int64)
        constant_103 = ops.constant(0.5, torch.float32)
        add_45 = ops.add(to_dtype_34, constant_103)
        constant_104 = ops.constant(1.6764705882352942, torch.float32)
        mul_21 = ops.mul(add_45, constant_104)
        constant_105 = ops.constant(1.6764705882352942, torch.float32)
        sub_20 = ops.sub(mul_21, constant_105)
        constant_106 = ops.constant(0.5, torch.float32)
        add_46 = ops.add(sub_20, constant_106)
        to_dtype_35 = ops.to_dtype(add_46, torch.int64, src_dtype = torch.float32)
        constant_107 = ops.constant(0, torch.int64)
        maximum_8 = ops.maximum(to_dtype_35, constant_107)
        sub_21 = ops.sub(minimum_12, maximum_8)
        constant_108 = ops.constant(5, torch.int64)
        minimum_13 = ops.minimum(sub_21, constant_108)
        constant_109 = ops.constant(3, torch.int64)
        lt_4 = ops.lt(constant_109, minimum_13)
        get_index_20 = self.get_index('index0')
        index_expr_20 = ops.index_expr(get_index_20, torch.int64)
        to_dtype_36 = ops.to_dtype(index_expr_20, torch.float32, src_dtype = torch.int64)
        constant_110 = ops.constant(0.5, torch.float32)
        add_47 = ops.add(to_dtype_36, constant_110)
        constant_111 = ops.constant(1.6764705882352942, torch.float32)
        mul_22 = ops.mul(add_47, constant_111)
        constant_112 = ops.constant(1.6764705882352942, torch.float32)
        sub_22 = ops.sub(mul_22, constant_112)
        constant_113 = ops.constant(0.5, torch.float32)
        add_48 = ops.add(sub_22, constant_113)
        to_dtype_37 = ops.to_dtype(add_48, torch.int64, src_dtype = torch.float32)
        constant_114 = ops.constant(0, torch.int64)
        maximum_9 = ops.maximum(to_dtype_37, constant_114)
        constant_115 = ops.constant(3, torch.int64)
        add_49 = ops.add(constant_115, maximum_9)
        to_dtype_38 = ops.to_dtype(add_49, torch.float32, src_dtype = torch.int64)
        get_index_21 = self.get_index('index0')
        index_expr_21 = ops.index_expr(get_index_21, torch.int64)
        to_dtype_39 = ops.to_dtype(index_expr_21, torch.float32, src_dtype = torch.int64)
        constant_116 = ops.constant(0.5, torch.float32)
        add_50 = ops.add(to_dtype_39, constant_116)
        constant_117 = ops.constant(1.6764705882352942, torch.float32)
        mul_23 = ops.mul(add_50, constant_117)
        sub_23 = ops.sub(to_dtype_38, mul_23)
        constant_118 = ops.constant(0.5, torch.float32)
        add_51 = ops.add(sub_23, constant_118)
        constant_119 = ops.constant(0.5964912280701754, torch.float32)
        mul_24 = ops.mul(add_51, constant_119)
        abs_5 = ops.abs(mul_24)
        constant_120 = ops.constant(1.0, torch.float32)
        minimum_14 = ops.minimum(abs_5, constant_120)
        constant_121 = ops.constant(1.0, torch.float32)
        sub_24 = ops.sub(constant_121, minimum_14)
        constant_122 = ops.constant(0.0, torch.float32)
        where_4 = ops.where(lt_4, sub_24, constant_122)
        add_52 = ops.add(add_41, where_4)
        get_index_22 = self.get_index('index0')
        index_expr_22 = ops.index_expr(get_index_22, torch.int64)
        to_dtype_40 = ops.to_dtype(index_expr_22, torch.float32, src_dtype = torch.int64)
        constant_123 = ops.constant(0.5, torch.float32)
        add_53 = ops.add(to_dtype_40, constant_123)
        constant_124 = ops.constant(1.6764705882352942, torch.float32)
        mul_25 = ops.mul(add_53, constant_124)
        constant_125 = ops.constant(1.6764705882352942, torch.float32)
        add_54 = ops.add(mul_25, constant_125)
        constant_126 = ops.constant(0.5, torch.float32)
        add_55 = ops.add(add_54, constant_126)
        to_dtype_41 = ops.to_dtype(add_55, torch.int64, src_dtype = torch.float32)
        constant_127 = ops.constant(456, torch.int64)
        minimum_15 = ops.minimum(to_dtype_41, constant_127)
        get_index_23 = self.get_index('index0')
        index_expr_23 = ops.index_expr(get_index_23, torch.int64)
        to_dtype_42 = ops.to_dtype(index_expr_23, torch.float32, src_dtype = torch.int64)
        constant_128 = ops.constant(0.5, torch.float32)
        add_56 = ops.add(to_dtype_42, constant_128)
        constant_129 = ops.constant(1.6764705882352942, torch.float32)
        mul_26 = ops.mul(add_56, constant_129)
        constant_130 = ops.constant(1.6764705882352942, torch.float32)
        sub_25 = ops.sub(mul_26, constant_130)
        constant_131 = ops.constant(0.5, torch.float32)
        add_57 = ops.add(sub_25, constant_131)
        to_dtype_43 = ops.to_dtype(add_57, torch.int64, src_dtype = torch.float32)
        constant_132 = ops.constant(0, torch.int64)
        maximum_10 = ops.maximum(to_dtype_43, constant_132)
        sub_26 = ops.sub(minimum_15, maximum_10)
        constant_133 = ops.constant(5, torch.int64)
        minimum_16 = ops.minimum(sub_26, constant_133)
        constant_134 = ops.constant(4, torch.int64)
        lt_5 = ops.lt(constant_134, minimum_16)
        get_index_24 = self.get_index('index0')
        index_expr_24 = ops.index_expr(get_index_24, torch.int64)
        to_dtype_44 = ops.to_dtype(index_expr_24, torch.float32, src_dtype = torch.int64)
        constant_135 = ops.constant(0.5, torch.float32)
        add_58 = ops.add(to_dtype_44, constant_135)
        constant_136 = ops.constant(1.6764705882352942, torch.float32)
        mul_27 = ops.mul(add_58, constant_136)
        constant_137 = ops.constant(1.6764705882352942, torch.float32)
        sub_27 = ops.sub(mul_27, constant_137)
        constant_138 = ops.constant(0.5, torch.float32)
        add_59 = ops.add(sub_27, constant_138)
        to_dtype_45 = ops.to_dtype(add_59, torch.int64, src_dtype = torch.float32)
        constant_139 = ops.constant(0, torch.int64)
        maximum_11 = ops.maximum(to_dtype_45, constant_139)
        constant_140 = ops.constant(4, torch.int64)
        add_60 = ops.add(constant_140, maximum_11)
        to_dtype_46 = ops.to_dtype(add_60, torch.float32, src_dtype = torch.int64)
        get_index_25 = self.get_index('index0')
        index_expr_25 = ops.index_expr(get_index_25, torch.int64)
        to_dtype_47 = ops.to_dtype(index_expr_25, torch.float32, src_dtype = torch.int64)
        constant_141 = ops.constant(0.5, torch.float32)
        add_61 = ops.add(to_dtype_47, constant_141)
        constant_142 = ops.constant(1.6764705882352942, torch.float32)
        mul_28 = ops.mul(add_61, constant_142)
        sub_28 = ops.sub(to_dtype_46, mul_28)
        constant_143 = ops.constant(0.5, torch.float32)
        add_62 = ops.add(sub_28, constant_143)
        constant_144 = ops.constant(0.5964912280701754, torch.float32)
        mul_29 = ops.mul(add_62, constant_144)
        abs_6 = ops.abs(mul_29)
        constant_145 = ops.constant(1.0, torch.float32)
        minimum_17 = ops.minimum(abs_6, constant_145)
        constant_146 = ops.constant(1.0, torch.float32)
        sub_29 = ops.sub(constant_146, minimum_17)
        constant_147 = ops.constant(0.0, torch.float32)
        where_5 = ops.where(lt_5, sub_29, constant_147)
        add_63 = ops.add(add_52, where_5)
        div = ops.div(where, add_63)
        get_index_26 = self.get_index('index2')
        store = ops.store('buf2', get_index_26, div, None)
        return store


buf3: SchedulerNode(ComputedBuffer)
buf3.writes = [MemoryDep('buf3', c0, {c0: 1126080})]
buf3.unmet_dependencies = 
    [   MemoryDep('buf2', 5*c1 + 1, {c0: 4140, c1: 272}),
        MemoryDep('buf2', 5*c1 + 2, {c0: 4140, c1: 272}),
        MemoryDep('buf2', 5*c1 + 3, {c0: 4140, c1: 272}),
        MemoryDep('buf2', 5*c1 + 4, {c0: 4140, c1: 272}),
        MemoryDep('buf2', 5*c1, {c0: 4140, c1: 272})]
buf3.met_dependencies = 
    [   MemoryDep('arg0_1', (tmp100) + 456*c0, {c0: 4140}),
        MemoryDep('arg0_1', (tmp17) + 456*c0, {c0: 4140}),
        MemoryDep('arg0_1', (tmp37) + 456*c0, {c0: 4140}),
        MemoryDep('arg0_1', (tmp58) + 456*c0, {c0: 4140}),
        MemoryDep('arg0_1', (tmp79) + 456*c0, {c0: 4140})]
buf3.users = [NodeUser(node=OUTPUT, can_inplace=False, is_weak=False)]
buf3.group.device = cpu
buf3.group.iteration = ((4140, 272), ())
buf3.sizes = ([4140, 272], [])
class buf3_loop_body:
    var_ranges = {z0: 4140, z1: 272}
    index0 = 5*z1
    index1 = z1
    index2 = indirect0 + 456*z0
    index3 = 5*z1 + 1
    index4 = indirect1 + 456*z0
    index5 = 5*z1 + 2
    index6 = indirect2 + 456*z0
    index7 = 5*z1 + 3
    index8 = indirect3 + 456*z0
    index9 = 5*z1 + 4
    index10 = indirect4 + 456*z0
    index11 = 272*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf2', get_index)
        get_index_1 = self.get_index('index1')
        index_expr = ops.index_expr(get_index_1, torch.int64)
        to_dtype = ops.to_dtype(index_expr, torch.float32, src_dtype = torch.int64)
        constant = ops.constant(0.5, torch.float32)
        add = ops.add(to_dtype, constant)
        constant_1 = ops.constant(1.6764705882352942, torch.float32)
        mul = ops.mul(add, constant_1)
        constant_2 = ops.constant(1.6764705882352942, torch.float32)
        sub = ops.sub(mul, constant_2)
        constant_3 = ops.constant(0.5, torch.float32)
        add_1 = ops.add(sub, constant_3)
        to_dtype_1 = ops.to_dtype(add_1, torch.int64, src_dtype = torch.float32)
        constant_4 = ops.constant(0, torch.int64)
        maximum = ops.maximum(to_dtype_1, constant_4)
        constant_5 = ops.constant(0, torch.int64)
        add_2 = ops.add(maximum, constant_5)
        constant_6 = ops.constant(455, torch.int64)
        minimum = ops.minimum(add_2, constant_6)
        set_indirect0 = self.set_indirect0(minimum)
        get_index_2 = self.get_index('index2')
        load_1 = ops.load('arg0_1', get_index_2)
        mul_1 = ops.mul(load, load_1)
        get_index_3 = self.get_index('index3')
        load_2 = ops.load('buf2', get_index_3)
        get_index_4 = self.get_index('index1')
        index_expr_1 = ops.index_expr(get_index_4, torch.int64)
        to_dtype_2 = ops.to_dtype(index_expr_1, torch.float32, src_dtype = torch.int64)
        constant_7 = ops.constant(0.5, torch.float32)
        add_3 = ops.add(to_dtype_2, constant_7)
        constant_8 = ops.constant(1.6764705882352942, torch.float32)
        mul_2 = ops.mul(add_3, constant_8)
        constant_9 = ops.constant(1.6764705882352942, torch.float32)
        sub_1 = ops.sub(mul_2, constant_9)
        constant_10 = ops.constant(0.5, torch.float32)
        add_4 = ops.add(sub_1, constant_10)
        to_dtype_3 = ops.to_dtype(add_4, torch.int64, src_dtype = torch.float32)
        constant_11 = ops.constant(0, torch.int64)
        maximum_1 = ops.maximum(to_dtype_3, constant_11)
        constant_12 = ops.constant(1, torch.int64)
        add_5 = ops.add(maximum_1, constant_12)
        constant_13 = ops.constant(455, torch.int64)
        minimum_1 = ops.minimum(add_5, constant_13)
        set_indirect1 = self.set_indirect1(minimum_1)
        get_index_5 = self.get_index('index4')
        load_3 = ops.load('arg0_1', get_index_5)
        mul_3 = ops.mul(load_2, load_3)
        add_6 = ops.add(mul_1, mul_3)
        get_index_6 = self.get_index('index5')
        load_4 = ops.load('buf2', get_index_6)
        get_index_7 = self.get_index('index1')
        index_expr_2 = ops.index_expr(get_index_7, torch.int64)
        to_dtype_4 = ops.to_dtype(index_expr_2, torch.float32, src_dtype = torch.int64)
        constant_14 = ops.constant(0.5, torch.float32)
        add_7 = ops.add(to_dtype_4, constant_14)
        constant_15 = ops.constant(1.6764705882352942, torch.float32)
        mul_4 = ops.mul(add_7, constant_15)
        constant_16 = ops.constant(1.6764705882352942, torch.float32)
        sub_2 = ops.sub(mul_4, constant_16)
        constant_17 = ops.constant(0.5, torch.float32)
        add_8 = ops.add(sub_2, constant_17)
        to_dtype_5 = ops.to_dtype(add_8, torch.int64, src_dtype = torch.float32)
        constant_18 = ops.constant(0, torch.int64)
        maximum_2 = ops.maximum(to_dtype_5, constant_18)
        constant_19 = ops.constant(2, torch.int64)
        add_9 = ops.add(maximum_2, constant_19)
        constant_20 = ops.constant(455, torch.int64)
        minimum_2 = ops.minimum(add_9, constant_20)
        set_indirect2 = self.set_indirect2(minimum_2)
        get_index_8 = self.get_index('index6')
        load_5 = ops.load('arg0_1', get_index_8)
        mul_5 = ops.mul(load_4, load_5)
        add_10 = ops.add(add_6, mul_5)
        get_index_9 = self.get_index('index7')
        load_6 = ops.load('buf2', get_index_9)
        get_index_10 = self.get_index('index1')
        index_expr_3 = ops.index_expr(get_index_10, torch.int64)
        to_dtype_6 = ops.to_dtype(index_expr_3, torch.float32, src_dtype = torch.int64)
        constant_21 = ops.constant(0.5, torch.float32)
        add_11 = ops.add(to_dtype_6, constant_21)
        constant_22 = ops.constant(1.6764705882352942, torch.float32)
        mul_6 = ops.mul(add_11, constant_22)
        constant_23 = ops.constant(1.6764705882352942, torch.float32)
        sub_3 = ops.sub(mul_6, constant_23)
        constant_24 = ops.constant(0.5, torch.float32)
        add_12 = ops.add(sub_3, constant_24)
        to_dtype_7 = ops.to_dtype(add_12, torch.int64, src_dtype = torch.float32)
        constant_25 = ops.constant(0, torch.int64)
        maximum_3 = ops.maximum(to_dtype_7, constant_25)
        constant_26 = ops.constant(3, torch.int64)
        add_13 = ops.add(maximum_3, constant_26)
        constant_27 = ops.constant(455, torch.int64)
        minimum_3 = ops.minimum(add_13, constant_27)
        set_indirect3 = self.set_indirect3(minimum_3)
        get_index_11 = self.get_index('index8')
        load_7 = ops.load('arg0_1', get_index_11)
        mul_7 = ops.mul(load_6, load_7)
        add_14 = ops.add(add_10, mul_7)
        get_index_12 = self.get_index('index9')
        load_8 = ops.load('buf2', get_index_12)
        get_index_13 = self.get_index('index1')
        index_expr_4 = ops.index_expr(get_index_13, torch.int64)
        to_dtype_8 = ops.to_dtype(index_expr_4, torch.float32, src_dtype = torch.int64)
        constant_28 = ops.constant(0.5, torch.float32)
        add_15 = ops.add(to_dtype_8, constant_28)
        constant_29 = ops.constant(1.6764705882352942, torch.float32)
        mul_8 = ops.mul(add_15, constant_29)
        constant_30 = ops.constant(1.6764705882352942, torch.float32)
        sub_4 = ops.sub(mul_8, constant_30)
        constant_31 = ops.constant(0.5, torch.float32)
        add_16 = ops.add(sub_4, constant_31)
        to_dtype_9 = ops.to_dtype(add_16, torch.int64, src_dtype = torch.float32)
        constant_32 = ops.constant(0, torch.int64)
        maximum_4 = ops.maximum(to_dtype_9, constant_32)
        constant_33 = ops.constant(4, torch.int64)
        add_17 = ops.add(maximum_4, constant_33)
        constant_34 = ops.constant(455, torch.int64)
        minimum_4 = ops.minimum(add_17, constant_34)
        set_indirect4 = self.set_indirect4(minimum_4)
        get_index_14 = self.get_index('index10')
        load_9 = ops.load('arg0_1', get_index_14)
        mul_9 = ops.mul(load_8, load_9)
        add_18 = ops.add(add_14, mul_9)
        get_index_15 = self.get_index('index11')
        store = ops.store('buf3', get_index_15, add_18, None)
        return store


